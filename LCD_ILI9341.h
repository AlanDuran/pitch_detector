/*
 * LCD_ILI9341.h
 *
 *  Created on: Apr 21, 2018
 *      Author: aland
 */

#ifndef LCD_ILI9341_H_
#define LCD_ILI9341_H_

#include "DataTypeDefinitions.h"
#include "SPI.h"

/**Screen size*/
#define ILI_LCD_X 320
#define ILI_LCD_Y 240
#define SCREEN_SIZE 76800
#define X_CHAR_LIMIT 6
#define Y_CHAR_LIMIT 8
#define X_BIGCHAR_LIMIT 15
#define Y_BIGCHAR_LIMIT 16

/**SPI configuration*/
#define LCD_DATA 1
#define LCD_CMD 0
#define DATA_OR_CMD_PIN 3
#define CS_PIN 0

/**Commands*/
#define ADAFRUIT_CMD 0xEF
#define ADA_1 0x03
#define ADA_2 0x80
#define ADA_3 0x02
#define VCOM_CMD 0xCF
#define VCOM_1 0
#define VCOM_2 0xC1
#define VCOM_3 0x30
#define ADAFRUIT_CMD2 0xED
#define ADA2_1 0x64
#define ADA2_2 3
#define ADA2_3 0x12
#define ADA2_4 0x81
#define ADAFRUIT_CMD3 0xE8
#define ADA3_1 0x85
#define ADA3_2 0x0
#define ADA3_3 0x78
#define ADAFRUIT_CMD4 0xCB
#define ADA4_1 0x39
#define ADA4_2 0x2C
#define ADA4_3 0x0
#define ADA4_4 0x34
#define ADA4_5 0x02
#define ADAFRUIT_CMD5 0xF7
#define ADA5_1 0x20
#define ADAFRUIT_CMD6 0xEA
#define ADA6 0

#define CMD_MADCTL 0x36
#define CMD_VSCRSADD 0x37
#define CMD_PWCTR1 0xC0
#define CMD_PWCTR2 0xC1
#define CMD_VMCTR1 0xC5
#define CMD_VMCTR2 0xC7
#define CMD_PIXFMT 0x3A
#define CMD_FRMCTR1 0xB1
#define CMD_DFUNCTR 0xB6
#define CMD_3DGAMMA 0xF2
#define CMD_GAMMASET 0x26
#define CMD_GMCTRP1 0xE0
#define CMD_GMCTRN1 0xE1
#define CMD_SLPOUT 0x11
#define CMD_DISPON 0x29

#define DATA_PWCTR1 0x23
#define DATA_PWCTR2 0x10
#define DATA_VMCTR1 0x3E
#define DATA2_VMCTR1 0x28
#define DATA_VMCTR2 0x86
#define DATA_MADCTL 0x48
#define DATA_VSCRSADD 0
#define DATA_PIXFMT 0x55
#define DATA_FRMCTR1 0
#define DATA2_FRMCTR1 0x18
#define DATA_DFUNCTR 0x08
#define DATA2_DFUNCTR 0x82
#define DATA3_DFUNCTR 0x27
#define DATA_3DGAMMA 0
#define DATA_GAMMASET 1
#define DATA0_GMCTRP1 0xF
#define DATA_GMCTRP1 0x31
#define DATA2_GMCTRP1 0x2B
#define DATA3_GMCTRP1 0x0C
#define DATA4_GMCTRP1 0x0E
#define DATA5_GMCTRP1 0x08
#define DATA6_GMCTRP1 0x4E
#define DATA7_GMCTRP1 0xF1
#define DATA8_GMCTRP1 0x37
#define DATA9_GMCTRP1 0x07
#define DATA10_GMCTRP1 0x10
#define DATA11_GMCTRP1 0x03
#define DATA12_GMCTRP1 0x0E
#define DATA13_GMCTRP1 0x09
#define DATA14_GMCTRP1 0
#define DATA0_GMCTRN1 0
#define DATA1_GMCTRN1 0x0E
#define DATA2_GMCTRN1 0x14
#define DATA3_GMCTRN1 0x03
#define DATA4_GMCTRN1 0x11
#define DATA5_GMCTRN1 0x07
#define DATA6_GMCTRN1 0x31
#define DATA7_GMCTRN1 0xC1
#define DATA8_GMCTRN1 0x48
#define DATA9_GMCTRN1 0x08
#define DATA10_GMCTRN1 0x0F
#define DATA11_GMCTRN1 0x0C
#define DATA12_GMCTRN1 0x31
#define DATA13_GMCTRN1 0x36
#define DATA14_GMCTRN1 0x0F

/**Write to RAM*/
#define CMD_CASET      0x2A
#define CMD_PASET      0x2B
#define CMD_RAMWR      0x2C

/**Fill screen*/
#define CA_LIMIT 0xEF
#define PA_LIMIT 0x13F

/**Colors*/
#define ILI9341_BLACK       0x0000      /*   0,   0,   0 */
#define ILI9341_NAVY        0x000F      /*   0,   0, 128 */
#define ILI9341_DARKGREEN   0x03E0      /*   0, 128,   0 */
#define ILI9341_DARKCYAN    0x03EF      /*   0, 128, 128 */
#define ILI9341_MAROON      0x7800      /* 128,   0,   0 */
#define ILI9341_PURPLE      0x780F      /* 128,   0, 128 */
#define ILI9341_OLIVE       0x7BE0      /* 128, 128,   0 */
#define ILI9341_LIGHTGREY   0xC618      /* 192, 192, 192 */
#define ILI9341_DARKGREY    0x7BEF      /* 128, 128, 128 */
#define ILI9341_BLUE        0x001F      /*   0,   0, 255 */
#define ILI9341_GREEN       0x07E0      /*   0, 255,   0 */
#define ILI9341_CYAN        0x07FF      /*   0, 255, 255 */
#define ILI9341_RED         0xF800      /* 255,   0,   0 */
#define ILI9341_MAGENTA     0xF81F      /* 255,   0, 255 */
#define ILI9341_YELLOW      0xFFE0      /* 255, 255,   0 */
#define ILI9341_WHITE       0xFFFF      /* 255, 255, 255 */
#define ILI9341_ORANGE      0xFD20      /* 255, 165,   0 */
#define ILI9341_GREENYELLOW 0xAFE5      /* 173, 255,  47 */
#define ILI9341_PINK        0xF81F

/**Data for graphics*/
#define COLOR_SHIFT 8
#define COLOR_MASK 0xFF
#define GOTO_XY_SHIFT16 16
#define GOTO_XY_SHIFT24 24
#define TEXT_SIZE 15
#define HALF_TEXT_SIZE 8
#define P_SIZE 150
#define PGEN_OFFSET 135
#define P1_OFFSET 52
#define P2_OFFSET 53

#define CLAVE_DE_SOL 0X80
#define SILENCIO_1 0x81
#define SILENCIO_2 0x82
#define SILENCIO_3 0x83
#define SILENCIO_4 0x84
#define SILENCIO_5 0x85
#define SILENCIO_6 0x86
#define DOUBLE_FLAG 0x89
#define FLAG 0x8d
#define BLACK 0x8d
#define WHITE 0x8e
#define WHITE_SHARP 0x7e

static const sint16 ASCII_BIG[][15] =
{
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 20
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 21 !
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 22 "
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 23 #
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 24 $
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 25 %
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 26 &
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 27 '
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 28 (
		{0x0000, 0x0000, 0x0000, 0x0000, 0x4002, 0x4002, 0x2004, 0x2004, 0x1008, 0x0810, 0x700E, 0x0000, 0x0000, 0x0000, 0x0000}, // 29 )
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 2a *
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 2b +
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 2c ,
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 2d -
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 2e .
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 2f /

		{0x0000, 0x0000, 0x0000, 0x3ff0, 0x3ff0, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0x3ff0, 0x3ff0, 0x0000, 0x0000, 0x0000}, //0 //30
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x600c, 0x600c, 0xfffc, 0xfffc, 0x000c, 0x000c, 0x0000, 0x0000, 0x0000, 0x0000},//1 //31
		{0x0000, 0x0000, 0x300c, 0x300c, 0xc03c, 0xc03c, 0xc0cc, 0xc0cc, 0xc30c, 0xc30c, 0x3c0c, 0x3c0c, 0x000c, 0x0000, 0x0000},//2 	0x32
		{0x0000, 0x0000, 0x0000, 0x3030, 0x3030, 0xc00c, 0xc00c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0x3cf0, 0x3cf0, 0x0000, 0x0000}, //3	0x33
		{0x0000, 0x0000, 0xff00, 0xff00, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0xfffc, 0xfffc, 0x0000, 0x0000, 0x0000},//4	0x34
		{0x0000, 0x0000, 0xff0c, 0xff0c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc3fc, 0xc3fc, 0x0000, 0x0000},//5	0x35
		{0x0000, 0x0000, 0xfffc, 0xfffc, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc3fc, 0xc3fc, 0x0000, 0x0000},//6 	0x36
		{0x0000, 0x0000, 0xc000, 0xc000, 0xc000, 0xc000, 0xc000, 0xc000, 0xc000, 0xc000, 0xfffc, 0xfffc, 0x0000, 0x0000, 0x0000},//7	0x37
		{0x0000, 0x0000, 0xfffc, 0xfffc, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xfffc, 0xfffc, 0x0000, 0x0000},//8	0x38
		{0x0000, 0x0000, 0xff00, 0xff00, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0xfffc, 0xfffc, 0x0000, 0x0000},//9	0x39


		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 3a :
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 3b ;
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 3c <
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 3d =
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 3e >
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 3f ?
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 40 @

		{0x0000, 0x3ffc, 0x3ffc, 0xc180, 0xc180, 0xc180, 0xc180, 0xc180, 0xc180, 0xc180, 0xc180, 0xc180, 0x3ffc, 0x3ffc, 0x0000}, //A
		{0x0000, 0xfffc, 0xfffc, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0x3cf0, 0x3cf0, 0x0000}, //B
		{0x0000, 0x3ff0, 0x3ff0, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0x3870, 0x3870, 0x0000}, //C
		{0x0000, 0x0000, 0xfffc, 0xfffc, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0x3030, 0x3030, 0x3030, 0x0fc0, 0x0fc0, 0x0000, 0x0000}, //D
		{0x0000, 0xfffc, 0xfffc, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0x0000, 0x0000}, //E
		{0x0000, 0xfffc, 0xfffc, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0xc000, 0xc000, 0xc000, 0xc000, 0x0000, 0x0000}, //F
		{0x0000, 0x3ff0, 0x3ff0, 0xc00c, 0xc00c, 0xc00c, 0xc18c, 0xc18c, 0xc18c, 0xc18c, 0xc18c, 0xc18c, 0x39f0, 0x39f0, 0x0000}, //G
		{0x0000, 0xfffc, 0xfffc, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0xfffc, 0xfffc, 0x0000}, //H
		{0x0000, 0x0000, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xfffc, 0xfffc, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0x0000}, //I
		{0x0000, 0x0000, 0x0060, 0x0060, 0x0018, 0x0018, 0x0018, 0x0018, 0x0018, 0x0018, 0x0018, 0x0018, 0xfff8, 0xfff8, 0x0000}, //J
		{0x0000, 0x0000, 0x0000, 0x0000, 0x7ffc, 0x7ffc, 0x0300, 0x0300, 0x0cc0, 0x0cc0, 0x703c, 0x703c, 0x0000, 0x0000, 0x0000},//K
		{0x0000, 0x0000, 0xfffc, 0xfffc, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x0000}, //L
		{0xfffc, 0xfffc, 0x6000, 0x6000, 0x1800, 0x1800, 0x0600, 0x0600, 0x1800, 0x1800, 0x6000, 0x6000, 0xfffc, 0xfffc, 0x0000}, //M
		{0x0000, 0x0000, 0x0000, 0xfffc, 0xfffc, 0xf000, 0xf000, 0x0f80, 0x0f80, 0x007c, 0x007c, 0xfffc, 0xfffc, 0x0000, 0x0000}, //N
		{0x0000, 0x3ff0, 0x3ff0, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0x3ff0, 0x3ff0, 0x0000}, //O
		{0x0000, 0xfffc, 0xfffc, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300, 0x3c00, 0x3c00, 0x0000, 0x0000}, //P
		{0x0000, 0x3ff0, 0x3ff0, 0xc00c, 0xc00c, 0xc00c, 0xc00c, 0xc18c, 0xc18c, 0xc06c, 0xc06c, 0xc00c, 0x3ffc, 0x3ffe, 0x0006}, //Q
		{0x0000, 0x0000, 0x3ffc, 0x3ffc, 0xc380, 0xc3c0, 0xc3c0, 0xc360, 0xc370, 0xc338, 0xc31c, 0x3c0c, 0x3c0c, 0x0000, 0x0000},//R
		{0x0000, 0x0000, 0x3e0c, 0x3e0c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc30c, 0xc0f0, 0xc0f0, 0x0000, 0x0000},//S
		{0x0000, 0x0000, 0xc000, 0xc000, 0xc000, 0xc000, 0xc000, 0xfffc, 0xfffc, 0xc000, 0xc000, 0xc000, 0xc000, 0xc000, 0x0000},//T
		{0x0000, 0xfff0, 0xfff0, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0x000c, 0xfff0, 0xfff0, 0x0000, 0x0000},//U
		{0x0000, 0xff00, 0xff00, 0x00c0, 0x00c0, 0x0030, 0x0030, 0x000c, 0x000c, 0x0030, 0x0030, 0x00c0, 0x00c0, 0xff00, 0xff00},//V
		{0x0000, 0x0000, 0xfff8, 0xfff8, 0x0018, 0x0078, 0x0060, 0x0180, 0x0180, 0x0060, 0x0078, 0x0018, 0xfff8, 0xfff8, 0x0000}, //W
		{0x0000, 0xc00c, 0xc00c, 0x3030, 0x3030, 0x0cc0, 0x0cc0, 0x0300, 0x0cc0, 0x0cc0, 0x3030, 0x3030, 0xc00c, 0xc00c, 0x0000}, //X
		{0x0000, 0xfc00, 0xfc00, 0x0300, 0x0300, 0x0300, 0x03fc, 0x03fc, 0x0300, 0x0300, 0x0300, 0xfc00, 0xfc00, 0x0000, 0x0000}, //Y
		{0x0000, 0x0000, 0xc03c, 0xc03c, 0xc0cc, 0xc0cc, 0xc30c, 0xc30c, 0xcc0c, 0xcc0c, 0xf00c, 0xf00c, 0x0000, 0x0000, 0x0000}, //Z


		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 5b [
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 5c �
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 5d ]
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 5e ^
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 5f _
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // 60

		{0x0000, 0x0000, 0x0000, 0x03f0, 0x03f0, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c30, 0x0c30, 0x03fc, 0x03fc, 0x0000, 0x0000},//a //0x61
		{0x0000, 0x0000, 0x7ffc, 0x7ffc, 0x030c, 0x030c, 0x030c, 0x030c, 0x030c, 0x030c, 0x00f0, 0x00f0, 0x0000, 0x0000, 0x0000},//b
		{0x0000, 0x0000, 0x03f0, 0x03f0, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0000, 0x0000, 0x0000},//c
		{0x0000, 0x0000, 0x00f0, 0x00f0, 0x030c, 0x030c, 0x030c, 0x030c, 0x030c, 0x030c, 0x7ff0, 0x7ff0, 0x0000, 0x0000, 0x0000},//d
		{0x0000, 0x03f0, 0x03f0, 0x0ccc, 0x0ccc, 0x0ccc, 0x0ccc, 0x0ccc, 0x0ccc, 0x030c, 0x030c, 0x0000, 0x0000, 0x0000, 0x0000},//e
		{0x0000, 0x0000, 0x0ffc, 0x0ffc, 0x30c0, 0x30c0, 0x30c0, 0x30c0, 0x3000, 0x0c00, 0x0c00, 0x0000, 0x0000, 0x0000, 0x0000},//f
		{0x0000, 0x0000, 0x0f18, 0x0f18, 0x30c6, 0x30c6, 0x30c6, 0x30c6, 0x30c6, 0x30c6, 0x0ffc, 0x0ffc, 0x0000, 0x0000, 0x0000},//g
		{0x0000, 0x0000, 0x3ffc, 0x3ffc, 0x0180, 0x0180, 0x0180, 0x0180, 0x0180, 0x0180, 0x007c, 0x007c, 0x0000, 0x0000, 0x0000},//h
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x33fc, 0x33fc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//i
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0078, 0x0078, 0x0006, 0x0006, 0x0006, 0x0006, 0x37f8, 0x37f8, 0x0000, 0x0000, 0x0000},//j
		{0x0000, 0x0000, 0x3ffc, 0x3ffc, 0x03c0, 0x03c0, 0x0c30, 0x0c30, 0x300c, 0x300c, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//k
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3ffc, 0x3ffc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//l
		{0x0000, 0x0000, 0x07fc, 0x07fc, 0x0600, 0x0600, 0x0600, 0x07fc, 0x07fc, 0x0600, 0x0600, 0x0600, 0x01fc, 0x01fc, 0x0000},//m
		{0x0000, 0x0000, 0x0000, 0x07fc, 0x07fc, 0x0180, 0x0180, 0x0600, 0x0600, 0x0600, 0x0600, 0x01fc, 0x01fc, 0x0000, 0x0000},//n
		{0x0000, 0x0000, 0x0000, 0x0000, 0x07f0, 0x07f0, 0x180c, 0x180c, 0x180c, 0x180c, 0x07f0, 0x07f0, 0x0000, 0x0000, 0x0000},//o
		{0x0000, 0x0000, 0x0ffc, 0x0ffc, 0x30c0, 0x30c0, 0x30c0, 0x30c0, 0x30c0, 0x30c0, 0x0f00, 0x0f00, 0x0000, 0x0000, 0x0000},//p
		{0x0000, 0x0000, 0x0f00, 0x0f00, 0x30c0, 0x30c0, 0x30c0, 0x30c0, 0x30c0, 0x30c0, 0x0ffc, 0x0ffc, 0x0000, 0x0000, 0x0000},//q
		{0x0000, 0x0000, 0x3ffc, 0x3ffc, 0x0c00, 0x0c00, 0x3000, 0x3000, 0x3000, 0x3000, 0x0f00, 0x0f00, 0x0000, 0x0000, 0x0000},//r
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0e0c, 0x0e0c, 0x318c, 0x318c, 0x318c, 0x318c, 0x318c, 0x318c, 0x0070, 0x0070, 0x0000},//s
		{0x0000, 0x0000, 0x0000, 0x1800, 0x1800, 0x7ffc, 0x7ffc, 0x1800, 0x1800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//t
		{0x0000, 0x0000, 0x0000, 0x0ff0, 0x0ff0, 0x000c, 0x000c, 0x000c, 0x000c, 0x0ff0, 0x0ff0, 0x0000, 0x0000, 0x0000, 0x0000},//u
		{0x0000, 0x0000, 0x0fc0, 0x0fc0, 0x0030, 0x0030, 0x000c, 0x000c, 0x0030, 0x0030, 0x0fc0, 0x0fc0, 0x0000, 0x0000, 0x0000},//v
		{0x0000, 0x1ff0, 0x1ff0, 0x000c, 0x000c, 0x000c, 0x000c, 0x00f0, 0x00f0, 0x000c, 0x000c, 0x000c, 0x000c, 0x1ff0, 0x1ff0},//w
		{0x0000, 0x0000, 0x0c0c, 0x0c0c, 0x0330, 0x0330, 0x00c0, 0x00c0, 0x0330, 0x0330, 0x0c0c, 0x0c0c, 0x0000, 0x0000, 0x0000},//x
		{0x0000, 0x0000, 0x0000, 0x0718, 0x0718, 0x00c6, 0x00c6, 0x00c6, 0x00c6, 0x07f8, 0x07f8, 0x0000, 0x0000, 0x0000, 0x0000},//y
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0c1c, 0x0c1c, 0x0c6c, 0x0c6c, 0x0d8c, 0x0d8c, 0x0f0c, 0x0f0c, 0x0000, 0x0000},//z 0x7A

		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0006, 0x0006, 0x0018, 0x0018, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},// , (coma)
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x003c, 0x003c, 0x003c, 0x003c, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, //. punto
		{0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3f00, 0x3f00, 0x3300, 0x3300, 0x3f00, 0x3f00, 0x0000},//°
		{0x0000, 0x0000, 0x0018, 0x0018, 0x0066, 0x0066, 0x0066, 0x0066, 0x3ff8, 0x3ff8, 0x0a00, 0x3f00, 0x0a00, 0x3f00, 0x0a00},// :
		{0x0000, 0x0000, 0x0f00, 0x0f00, 0x3f00, 0x3f00, 0x300c, 0x300c, 0x3030, 0x3030, 0x3fc0, 0x3fc0, 0x0000, 0x0000, 0x0000}, //simbolo
		{0x0000, 0x0330, 0x0330, 0x0cce, 0x0cce, 0xfffe, 0xfffe, 0xcf30, 0xcf30, 0x33c0, 0x33c0, 0x0000, 0x0000, 0x0000, 0x0000}, //simbolo
		{0x0000, 0x0000, 0x0000, 0x0660, 0x0660, 0x0660, 0x9e60, 0x9e60, 0x6678, 0x6678, 0x0666, 0x01e6, 0x01e0, 0x0000, 0x0000}, //simbolo
		{0x0000, 0x0000, 0xf3c0, 0xf3c0, 0xf3c0, 0xf3c0, 0x30cc, 0x30cc, 0x30d8, 0x30d8, 0x3ff0, 0x3ff0, 0x0000, 0x0000, 0x0000},//simbolo
		{0x0000, 0x0000, 0x0f00, 0x0f00, 0x0f0c, 0x0f0c, 0x0318, 0x0318, 0x0ff0, 0x0ff0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//simbolo
		{0x0000, 0x0000, 0x0078, 0x0078, 0x0078, 0x0078, 0x0078, 0x0078, 0x0078, 0x0078, 0x0078, 0x0078, 0x0078, 0x0000, 0x0000},//simbolo _
		{0x0000, 0x0000, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x0000, 0x0000},// simbolo -
		{0x0000, 0x0000, 0x3c00, 0x3c00, 0x3c00, 0x3c00, 0x3c00, 0x3c00, 0x3c00, 0x3c00, 0x3c00, 0x3c00, 0x3c00, 0x0000, 0x0000}, //simbolo - arriba
		{0xc300, 0xc300, 0xc318, 0xc318, 0xc37e, 0xc37e, 0xc37e, 0xc37e, 0xfff8, 0xfff8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//simbolo3
		{0xc300, 0xc300, 0xc318, 0xc318, 0xc37e, 0xc37e, 0xc37e, 0xc37e, 0xfff8, 0xfff8, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300},//simbolo2
		{0x0000, 0x0000, 0x0018, 0x0018, 0x007e, 0x007e, 0x007e, 0x007e, 0xfff8, 0xfff8, 0xc300, 0xc300, 0xc300, 0xc300, 0xc300},//simbolo1
		{0xc000, 0xc000, 0xc018, 0xc018, 0xc07e, 0xc07e, 0xc07e, 0xc07e, 0xfff8, 0xfff8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//simbolo3
		{0xc000, 0xc000, 0xc018, 0xc018, 0xc07e, 0xc07e, 0xc07e, 0xc07e, 0xfff8, 0xfff8, 0xc000, 0xc000, 0xc000, 0xc000, 0xc000},//simbolo2
		{0x0000, 0x0000, 0x0018, 0x0018, 0x007e, 0x007e, 0x007e, 0x007e, 0xfff8, 0xfff8, 0xc000, 0xc000, 0xc000, 0xc000, 0xc000},//simbolo1
		{0x0000, 0x0000, 0x0018, 0x0018, 0x007e, 0x007e, 0x007e, 0x007e, 0x3ff8, 0x3ff8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//simbolo
		{0x0000, 0x0000, 0x0018, 0x0018, 0x0066, 0x0066, 0x0066, 0x0066, 0x3ff8, 0x3ff8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},//simbolo
};
/** \brief It configures the LCD*/
void LCD_ILI9341_init(void);

/** \brief Writes a given color in every pixel*/
void LCD_ILI9341_fillScreen(uint16 color);

void LCD_ILI9341_drawNLines(uint16, uint16, uint16);

void LCD_ILI9341_gotoXY(uint32, uint32);

void LCD_ILI9341_drawShape(uint16, uint16, uint16, uint16, uint16);

/** \brief It writes a byte in the LCD memory. The place of writting is the last place that was indicated by LCDNokia_gotoXY. In the reset state
 * the initial place is x=0 y=0*/
void LCD_ILI9341_writeColor(uint16, uint16, uint16);

void LCD_ILI9341_writeBigLetter(uint16 x, uint16 y, uint16 color, uint8 letter);

void LCD_ILI9341_sendString(uint16 x, uint16 y, uint16 color,uint8 *characters);

/** \brief generates a delay with a blocking for function
 *
 * It is used in the initialization routine*/
void LCD_ILI9341_delay(void);

void LCD_ILI9341_drawPartiture(uint8);

#endif /* LCD_ILI9341_H_ */
